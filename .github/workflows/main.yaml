name: Build & Release APK for Flutter Application

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'What to build'
        default: 'Android'
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - uses: actions/cache@v3
        with:
          path: |
            **/flutter/.pub
            **/flutter/bin
            **/flutter/packages
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-  # Matches any previous cache key

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'
          cache: true
          architecture: x64
      # - shell: bash
      #   env:
      #     OWNER: ${{ secrets.OWNER }}
      #     REPO: ${{ secrets.REPO }}
      #     TOKEN: ${{ secrets.TOKEN }}
      #   run: |
      #     if cd flutter; then git pull && cd ..; else git clone "https://farflungai:$TOKEN@github.com/$OWNER/$REPO.git" && cd flutter; fi
      # - run: rm -rf flutter
      - shell: bash
        env:
          OWNER: ${{ secrets.OWNER }}
          REPO: ${{ secrets.REPO }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          git clone "https://farflungai:$TOKEN@github.com/$OWNER/$REPO.git" tmp && mv tmp/* .
      - run: flutter pub get
      - run: flutter --version
      - run: flutter build apk --release

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          owner: ${{ secrets.OWNER }}
          repo: ${{ secrets.REPO }}
          # tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
          tag: v1.0.0
      - shell: bash
        env:
          NOTIFY_ENDPOINT: ${{ secrets.NOTIFY_ENDPOINT }}
        run: |
          cd flutter
          COMMIT_MESSAGE=$(git log --pretty=format:"- %s" -n 1)
          if [[ -z "$COMMIT_MESSAGE" ]]; then
            echo "No commit message found"
          else
            echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
            curl --location "$NOTIFY_ENDPOINT" \
              --header 'Content-Type: application/json' \
              --data "{ \"message\": \"$COMMIT_MESSAGE\" }"
          fi
      